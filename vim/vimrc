" Best view with a 256 color terminal and Powerline fonts

set nocompatible
filetype off
call plug#begin('~/.vim/plugged')


" Plug 'gmarik/vundle'

Plug 'kien/ctrlp.vim'
Plug 'tomtom/tcomment_vim'
Plug 'bling/vim-airline'
Plug 'airblade/vim-gitgutter'
Plug 'dyng/ctrlsf.vim'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-obsession'
Plug 'tpope/vim-dispatch'
Plug 'sheerun/vim-polyglot'
Plug 'kshenoy/vim-signature'
Plug 'fatih/vim-go'
Plug 'christoomey/vim-tmux-navigator'
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'tmhedberg/matchit'
" Plug 'mtth/scratch.vim'

" Color Themes
" Plug 'flazz/vim-colorschemes'

call plug#end()

colorscheme rayje

""""""""
if has('clipboard')
  if $TMUX == ''
    set clipboard+=unnamed
  endif
endif

set synmaxcol=120

" Use :help 'option' to see the documentation for the given option.
set showmatch
set showmode

set shiftround

" Use ,c to clear the highlighting of :set hlsearch.
nnoremap <silent> <leader>c :nohl<CR>

set showcmd

set encoding=utf-8
set tabstop=4 shiftwidth=4 softtabstop=4 expandtab

inoremap <C-U> <C-G>u<C-U>

set number
" set hlsearch
set ignorecase
set smartcase

" Don't use Ex mode, use Q for formatting
" map Q gq

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" do not history when leavy buffer
set hidden

set nobackup
set nowritebackup
set noswapfile
set fileformats=unix,dos,mac

set completeopt=menuone,longest,preview

"
" Plugins config
"

" CtrlP
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.data/* 

" Ultisnip
" NOTE: <f1> otherwise it overrides <tab> forever
let g:UltiSnipsExpandTrigger="<f1>"
let g:UltiSnipsJumpForwardTrigger="<f1>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"
let g:did_UltiSnips_vim_after = 1

" vim-airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

" comment / decomment & normal comment behavior
vmap <C-m> gc
" Disable tComment to escape some entities
let g:tcomment#replacements_xml={}

let g:airline_theme='bubblegum'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_close_button = 1
let g:airline#extensions#tabline#close_symbol = 'X'

let mapleader = ','
nnoremap <Leader>p :set paste<CR>
nnoremap <Leader>o :set nopaste<CR>
noremap  <Leader>g :GitGutterToggle<CR>
set pastetoggle=<F2>

nmap  <Leader>w <Plug>CtrlSFCwordExec
noremap <Leader>v :source ~/.vimrc<CR>

" this machine config
if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif

let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1


" Split screen vertically
nmap <F7> :vsplit .<CR>

map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

nnoremap <C-n> :bnext<CR>
nnoremap <C-b> :bprevious<CR>

map <C-t> :NERDTreeToggle<CR>

" Close current buffer and open previous buffer
nmap ,d :b#<bar>bd!#<CR>

" fugitive git bindings
nnoremap <space>ga :Git add %:p<CR><CR>
nnoremap <space>gs :Gstatus<CR>
nnoremap <space>gc :Gcommit -v -q<CR>
nnoremap <space>gt :Gcommit -v -q %:p<CR>
nnoremap <space>gd :Gdiff<CR>
nnoremap <space>ge :Gedit<CR>
nnoremap <space>gr :Gread<CR>
nnoremap <space>gw :Gwrite<CR><CR>
nnoremap <space>gl :silent! Glog<CR>:bot copen<CR>
nnoremap <space>gp :Ggrep<Space>
nnoremap <space>gm :Gmove<Space>
nnoremap <space>gb :Git branch<Space>
nnoremap <space>go :Git checkout<Space>
nnoremap <space>gps :Gpush<Space>
nnoremap <space>gpl :Dispatch! git pull<CR>

nnoremap <C-x>v :e ~/.vimrc<CR>
nnoremap <C-x>t :e ~/.tmux.conf<CR>
nnoremap <C-x>c :e ~/.vim/colors/rayje.vim<CR>

" let g:scratch_height = 1
let g:scratch_top = 0
let g:scratch_horizontal = 0
let g:scratch_autohide = 0

function! NumberToggle()
    if(&relativenumber == 1)
        set nornu
    else
        set rnu
    endif
endfunc

nnoremap <Leader>n :call NumberToggle()<CR>
"autocmd InsertEnter * :set nornu
"autocmd InsertLeave * :set rnu

" Disable arrow keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

nnoremap j gj
nnoremap k gk
